name: GitHub Actions Third Try
on:
  push:
    branches: [ "main" ]
    paths: 
    - 'hw1/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/hw1/build" >> "$GITHUB_OUTPUT"
        
    - name: Install Boost tests
      run: >
        sudo apt install libboost-test-dev -y
        
    - name: Build|Tests|Package
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DPATCH_VERSION=${{ github.run_number }}
        -DUSE_TESTS="GTEST"
        -S ${{ github.workspace }}/hw1
         cmake --build ${{ steps.strings.outputs.build-output-dir }} 
         cmake --build ${{ steps.strings.outputs.build-output-dir }} --target test
         cmake --build ${{ steps.strings.outputs.build-output-dir }} --target package

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }} 
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.strings.outputs.build-output-dir }}/helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package
